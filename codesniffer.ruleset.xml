<?xml version="1.0"?>
<ruleset name="WordPress Theme Coding Standards">
	<!-- See https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
	<!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/blob/develop/WordPress-Core/ruleset.xml -->

	<!-- Set a description for this ruleset. -->
	<description>Standard rules to check for WordPress Theme development.</description>

	<arg name="extensions" value="php" />
	<arg value="s" />
	<arg value="p" />

	<exclude-pattern>/_strap/*</exclude-pattern>
	<exclude-pattern>/components/*</exclude-pattern>
	<exclude-pattern>/node_modules/*</exclude-pattern>
	<exclude-pattern>/ResBox/*</exclude-pattern>
	<exclude-pattern>/Titan-Franework/*</exclude-pattern>
	<exclude-pattern>/vendor/*</exclude-pattern>
	<exclude-pattern>/tests/*</exclude-pattern>

	<!--
	#############################################################################
	Handbook: PHP - Single and Double Quotes.
	Ref: https://make.wordpress.org/core/handbook/coding-standards/php/#single-and-double-quotes
	#############################################################################
	-->
	<!-- Covers rule: Use single and double quotes when appropriate.
		 If you're not evaluating anything in the string, use single quotes. -->
	<rule ref="Squiz.Strings.DoubleQuoteUsage"/>
	<rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
		<severity>0</severity>
	</rule>

	<!--
	To get the optimal benefits of using WPCS, we should add a couple of
	custom properties.
	Adjust the values of these properties to fit our needs.

	For information on additional custom properties available, check out
	the wiki:
	https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
	-->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="acapulco"/>
		</properties>
	</rule>

	<rule ref="WordPress.WP.DeprecatedFunctions">
		<properties>
			<property name="minimum_supported_version" value="4.5"/>
		</properties>
	</rule>

	<!-- Include the WordPress ruleset, with exclusions. -->
	<rule ref="WordPress">
		<exclude name="Generic.WhiteSpace.ScopeIndent.IncorrectExact" />
		<exclude name="Generic.WhiteSpace.ScopeIndent.Incorrect" />
		<exclude name="PEAR.Functions.FunctionCallSignature.Indent" />
	</rule>

	<!--
	We may also want to to include all the rules in a standard.
	-->
	<rule ref="WordPress-Extra">
		<!--
		We may want a middle ground though. The best way to do this is add the
		entire ruleset, then rule by rule, remove ones that don't suit a project.
		We can do this by running `phpcs` with the '-s' flag, to see the names of
		the different Sniffs, as their rules are broken. From here, we can opt to
		exclude problematic sniffs like so.
		-->

		<exclude name="WordPress.WhiteSpace.ControlStructureSpacing"/>
		<exclude name="WordPress.XSS.EscapeOutput"/>
	</rule>

	<!-- Let's also check that everything is properly documented. -->
	<rule ref="WordPress-Docs"/>

	<!-- Add in some extra rules from other standards. -->
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.Commenting.Todo"/>

	<!-- Check for PHP cross-version compatibility. -->
	<!--
	To enable this, the PHPCompatibility standard needs
	to be installed.
	See the readme for installation instructions:
	https://github.com/wimg/PHPCompatibility
	-->
	<!--
	<config name="testVersion" value="5.2-99.0"/>
	<rule ref="PHPCompatibility"/>
	-->
</ruleset>
